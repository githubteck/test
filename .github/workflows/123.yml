name: Update M3U8 File

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # Run every hour at minute 0

jobs:
  upload_m3u8:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Python
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # Step 3: Install necessary Python dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    # Step 4: Run the Python script to fetch, parse, and upload M3U8 data
    - name: Run Python script
      run: |
        python3 <<EOF
        import requests
        import base64
        
        repo_owner = 'githubteck'  # Replace with your GitHub username
        repo_name = 'test'  # Replace with your GitHub repository name
        file_path = '123.m3u8'  # Path in the GitHub repository where the file will be uploaded
        access_token = "${{ secrets.ABC }}"  # Access the token securely from GitHub Secrets
        
        # Fetch raw data
        def fetch_tv_data():
            data_url = 'https://raw.githubusercontent.com/aseanic/aseanic.github.io/refs/heads/main/tv'
            response = requests.get(data_url)
            return response.text if response.status_code == 200 else None
        
        # Parse data
        def parse_channels(data):
            lines = data.split('\n')
            channels = []
            channel_info = []

            for line in lines:
                if line.strip() == '':
                    continue
                if line.startswith("#☯☯"):
                    if channel_info:
                        channels.append("\n".join(channel_info))
                    channel_info = [line.strip()]
                    continue
                channels.append(line.strip())
            return channels
        
        # Upload data to GitHub
        def upload_to_github(content):
            file_content = base64.b64encode(content.encode()).decode()
            api_url = f'https://api.github.com/repos/{repo_owner}/{repo_name}/contents/{file_path}'
            headers = {'Authorization': f'token {access_token}'}
            response = requests.get(api_url, headers=headers)
            sha = response.json().get('sha') if response.status_code == 200 else None
            
            if sha:
                existing_content = requests.get(api_url, headers=headers).json().get('content')
                if existing_content and base64.b64decode(existing_content).decode() == content:
                    print("No changes detected. Skipping upload.")
                    return

            data = {'message': 'Upload channels.m3u8 file', 'content': file_content}
            if sha:
                data['sha'] = sha
            
            upload_response = requests.put(api_url, json=data, headers=headers)

            if upload_response.status_code in [200, 201]:
                print("File uploaded successfully!")
            else:
                print(f"Failed to upload file. Status Code: {upload_response.status_code}")
                print(f"Response Content: {upload_response.text}")

        # Main execution
        raw_data = fetch_tv_data()
        if raw_data:
            channels = parse_channels(raw_data)
            m3u8_content = "\n".join(channels)
            upload_to_github(m3u8_content)

        EOF
