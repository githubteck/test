name: Generate and Upload 456.m3u8

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # ✅ Required for file updates via GitHub API

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Generate and upload 456.m3u8
        env:
          MY_GITHUB_TOKEN: ${{ secrets.ABC }}
        run: |
          python3 <<EOF
          import requests
          import base64
          import os
          import json

          repo_owner = "githubteck"
          repo_name = "test"
          file_path = "456.m3u8"
          token_url = "https://api.npoint.io/be2f8f200b5bb9130bdb"
          github_token = os.getenv("MY_GITHUB_TOKEN")
          branch = "main"

          if not github_token:
              print("❌ GitHub token not found!")
              exit(1)

          # Fetch token from external source
          try:
              token = requests.get(token_url).text.strip()
          except Exception as e:
              print(f"❌ Failed to fetch external token: {e}")
              exit(1)

          content = f"""#EXTM3U
          #EXTINF:-1 tvg-id="306" tvg-name="Astro AEC" tvg-logo="https://mediaready.vr.ctrp.astro.com.my/astro/image/fetch/f_auto,fl_lossy,q_100,h_auto,w_300/https://datastore.vr.ctrp.sooka.my/content/images/016969AstroAEC_2024_IVP_LAND_1280x720.jpg" group-title="🇲🇾 MALAYSIA",Astro AEC
          #EXTVLCOPT:http-user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36
          #EXTHTTP:{{"Authorization":"Bearer {token}"}}
          #KODIPROP:inputstream.adaptive.manifest_type=dash
          #KODIPROP:contentlookup=False
          #KODIPROP:mimetype=application/dash+xml
          #KODIPROP:inputstream=inputstream.adaptive
          #KODIPROP:inputstream.adaptive.manifest_type=dash
          #KODIPROP:inputstream.adaptive.license_type=org.w3.clearkey
          #KODIPROP:inputstream.adaptive.license_key={{"655b6df8085d4fe6b3f71c0f4288f98a":"5f0d4251e05e0a3a661218169ee84181","d66e2fe5f045426195d432802f9ba807":"6fe283a6f1f3a3fb69f82c4340e0dde2"}}
          https://l04.dp.sooka.my/2400/linear/index.mpd
          """

          encoded = base64.b64encode(content.encode()).decode()
          api_url = f"https://api.github.com/repos/{repo_owner}/{repo_name}/contents/{file_path}"

          headers = {
              "Authorization": f"token {github_token}",
              "Accept": "application/vnd.github.v3+json"
          }

          # Check for existing file
          r = requests.get(api_url, headers=headers)
          sha = r.json().get("sha") if r.status_code == 200 else None

          payload = {
              "message": "Update 456.m3u8 [auto]",
              "content": encoded,
              "branch": branch
          }
          if sha:
              payload["sha"] = sha

          res = requests.put(api_url, headers=headers, json=payload)
          if res.status_code in [200, 201]:
              print("✅ Upload successful.")
          else:
              print(f"❌ Upload failed: {res.status_code} {res.text}")
          EOF
